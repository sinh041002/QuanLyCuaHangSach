<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="panel1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptrHienMatKhau.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Hens9JLC0dcvqR4N6DndC6S161yRHhlZw4qa3Ub67HRxm6XOhznU/ipdNMFiHJPekEYP+DX1zHRWi590
        AuUX0uhrl1bPc98jrdW90slp9LdZWj2Uf1bnsruWfyfPjr52TXWM7FgJi9PZvL+fRg/8NdVLer4zHUyX
        Rx193VJ7ferEt7XoaolrezPcyxkPpm8CuyfA6OvWVMfGTew2CpN1nrTGLTtHvTCNdhbs32iNM5/fmJa8
        iuDN0lIv7TurOhG4j+kDdV7MWlf0O7COiaO/ESxOZ7w/K42eCGuryyc/IB04O75b7K5xu+XWc6CdL7GE
        RYT6O3TDmr65Gf2uS6+P4Rul/fWx3v3rT02jr1lbHQs7JsJqdGBc8+IeB9ZZv/2EuL8npNG/XUtdP6Cb
        Lc3xOujLpG5W8940+t3W0k+l/d0g/Vka/ds19uvJpbGsUt8EPCmNnhhr7PT0lLRvjfSj0zvS6N+uqX6K
        fE26XzqS9eN3Syd3fl96bVrr0Zv962msPoar99uvpD7GR/92jXXsW8JRLtiRJa6Fv5M6IaqHSHtYsNeH
        fymN/t0a6+Vy/zc9Mk1hbfSuafCo1CWP13Ap36HWRbCuk/oY7sp/S9rGeBN1zAPO8OjU/fVHT5a11k9Q
        t08P2++/6cz1mvFOJPvhdIvUNSe2pd/7lqk/68XJzPWD99DUx64jWGeuY1zHOuAAD0neBHxtXRXtPQf8
        Nx2896f+zX41dbDt1sS3TtdLl0s9VL//IkT93/1v/f/6b/pv75P6tU9NPf3wgTT6Wfra+lhd+0p+ozq2
        dYwDDqLb6Tp/KmlJde7D/RNwNrpC2pI3RJG0nvqB5nsScIjulDqRaPSEkqQ5dFq6WwIO0wlpzduBSppv
        Hbs6hgFH6KapO+mNnmCSNMW6yuHNE7BD10wfTKMnmiRNqV4x0jEL2JAurfrWNHrCSdIUOildIQEb1uVE
        35RGTzxJ2sv+PF0sAVvStcVtISppSr0inS8BW9b1xZ+eRk9ESdrNfjudKwG7pLto2URI0l7W7art6Ad7
        pDuNWTVQ0m7WnR8fkIA91l3g7MwmaTc6JXXDKGAiLp9OTKMnrCRtorelKyVgYo5N3ad99MSVpJ30ynTB
        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
        TkSuQmCC
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column10.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column10.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>